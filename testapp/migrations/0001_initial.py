# Generated by Django 3.2.10 on 2021-12-29 13:05

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('birth_date', models.DateField(blank=True, default=None, null=True)),
                ('patronymic', models.CharField(blank=True, default='', max_length=32, verbose_name='Отчество')),
                ('pincode', models.CharField(blank=True, default='', max_length=4)),
                ('fingerprint', models.CharField(blank=True, default='', max_length=512)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BankCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_number', models.CharField(max_length=16, verbose_name='Номер карты')),
                ('month', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(12), django.core.validators.MinValueValidator(1)], verbose_name='Месяц')),
                ('year', models.PositiveSmallIntegerField(verbose_name='Месяц')),
                ('first_name', models.CharField(max_length=32, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=32, verbose_name='Фамилия')),
                ('status', models.CharField(choices=[('NEW', 'Не активна'), ('ACTIVE', 'Активна'), ('BLOCKED', 'Заблокирована')], db_index=True, max_length=32, verbose_name='Статус обращения')),
                ('is_default', models.BooleanField(default=False, verbose_name='Основная карта')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Банковская карта',
                'verbose_name_plural': 'Банковские карты',
            },
        ),
        migrations.CreateModel(
            name='UserRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(1)])),
                ('msg', models.TextField(blank=True, default='', verbose_name='Текст сообщения')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='extra', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=4, max_digits=32)),
                ('title', models.CharField(blank=True, default='', max_length=32, verbose_name='Краткое описание')),
                ('status', models.CharField(choices=[('NEW', 'Новая'), ('PROCESS', 'В процессе'), ('BLOCKED', 'Заблокирована'), ('CLOSED', 'Закрыто'), ('CANCEL', 'Отменена')], db_index=True, max_length=32, verbose_name='Статус обращения')),
                ('created_dt', models.DateTimeField(auto_now_add=True)),
                ('updated_dt', models.DateTimeField(auto_now=True)),
                ('bank_card', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='testapp.bankcard')),
            ],
            options={
                'verbose_name': 'Операция',
                'verbose_name_plural': 'Операции',
            },
        ),
        migrations.CreateModel(
            name='RecoveryData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=4)),
                ('created_dt', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Код востановления',
                'verbose_name_plural': 'Код востановления',
            },
        ),
        migrations.CreateModel(
            name='FeedBack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback_type', models.CharField(choices=[('QUEST', 'Обращение'), ('PROBLEM', 'Проблема'), ('RECOVERY', 'Востановление'), ('OPERATION', 'Спорная операция')], db_index=True, max_length=32, verbose_name='Тип обращения')),
                ('status', models.CharField(choices=[('NEW', 'Новое'), ('PROCESS', 'В процессе'), ('CLOSE', 'Закрыто')], db_index=True, max_length=32, verbose_name='Статус обращения')),
                ('msg', models.TextField(blank=True, default='', verbose_name='Текст сообщения')),
                ('answer', models.TextField(blank=True, default='', verbose_name='Ответ на Обращение')),
                ('created_dt', models.DateTimeField(auto_now_add=True)),
                ('updated_dt', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('bank_card', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks', to='testapp.bankcard')),
                ('operation', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks', to='testapp.transaction')),
                ('recovery', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks', to='testapp.recoverydata')),
            ],
            options={
                'verbose_name': 'Обращение',
                'verbose_name_plural': 'Обращения',
            },
        ),
    ]
